// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(StockMarketDbContext))]
    partial class StockMarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.BuyOrder", b =>
                {
                    b.Property<Guid>("BuyOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuyOrderID");

                    b.ToTable("BuyOrders", (string)null);

                    b.HasData(
                        new
                        {
                            BuyOrderID = new Guid("3f0e2d80-57a8-42e1-804b-3038a5fbdaca"),
                            DateAndTimeOfOrder = new DateTime(2021, 11, 1, 7, 51, 0, 0, DateTimeKind.Unspecified),
                            Price = 336.31999999999999,
                            Quantity = 8,
                            StockName = "Microsoft Corp",
                            StockSymbol = "MSFT"
                        },
                        new
                        {
                            BuyOrderID = new Guid("c9e8a5a4-0d49-4c19-a9f6-5f29bcb44731"),
                            DateAndTimeOfOrder = new DateTime(2009, 3, 12, 1, 33, 0, 0, DateTimeKind.Unspecified),
                            Price = 23.0,
                            Quantity = 21,
                            StockName = "Microsoft Corp",
                            StockSymbol = "MSFT"
                        });
                });

            modelBuilder.Entity("Entities.SellOrder", b =>
                {
                    b.Property<Guid>("SellOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SellOrderID");

                    b.ToTable("SellOrders", (string)null);

                    b.HasData(
                        new
                        {
                            SellOrderID = new Guid("e45dbd7c-23e4-4d74-83cb-f84ae4f85f50"),
                            DateAndTimeOfOrder = new DateTime(2021, 9, 1, 7, 51, 0, 0, DateTimeKind.Unspecified),
                            Price = 336.31999999999999,
                            Quantity = 1,
                            StockName = "Microsoft Corp",
                            StockSymbol = "MSFT"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
